# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# Metrix++ is a tool to collect and analyze code metrics.
# More details at https://metrixplusplus.github.io/metrixplusplus/

# To-do: save output files to GitHub
# To-do: consider proving detail at a more granular (commit) level

name: Metrix++

on:
  pull_request:
#    branches: [ $default-branch, $protected-branches ]
#  pull_request:
#    # The branches below must be a subset of the branches above
#    branches: [ $default-branch ]
# Could run on a schedule to capture larger trends
#  schedule:
#    - cron: $cron-weekly

jobs:
  metrixpp:
    name: Run Metrix++
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
        # fetch all commits so we can go back to the beginning of the PR and measure change
          fetch-depth: 0
      - name: Install Metrix++
        run: pip install metrixpp
      - name: Run Metrix++ after PR
        run: metrix++ collect --std.code.complexity.cyclomatic --db-file after.pr.db .
        continue-on-error: true
      - name: Checkout PR base sha
        run:  git checkout ${{ github.event.pull_request.base.sha }}
      - name: Run Metrix++ before PR
        run: metrix++ collect --std.code.complexity.cyclomatic --db-file before.pr.db .
        continue-on-error: true
      - name: Process results
        run: |
          metrix++ view --db-file=after.pr.db >& results.after.txt
          metrix++ view --db-file=before.pr.db >& results.before.txt
          # Complexity level(s) chosen should be customized per project
          metrix++ limit --db-file=after.pr.db --db-file-prev=before.pr.db --max-limit=std.code.complexity:cyclomatic:20 --warn-mode=trend >& results.trend.20.txt
          metrix++ limit --db-file=after.pr.db --db-file-prev=before.pr.db --max-limit=std.code.complexity:cyclomatic:20 --warn-mode=touched >& results.touched.20.txt
        continue-on-error: true
      - name: View 20 plus complexity regions trending up
        run: more results.trend.20.txt
      - name: View 20 plus complexity regions touched
        run: more results.touched.20.txt
      - name: View complexity after
        run: more results.after.txt
      - name: View complexity before
        run: more results.before.txt
#need to change this to text
#      - name: Upload output to GitHub
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: metrixpp-output.sarif
#          wait-for-processing: true
